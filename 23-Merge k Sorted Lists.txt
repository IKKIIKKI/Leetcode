/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length==1)
            return lists[0];
        Comparator<ListNode> OrderIsdn =  new Comparator<ListNode>(){
            public int compare(ListNode o1, ListNode o2) {
                    return o1.val-o2.val;  
            }  
		};
		Queue<ListNode> queue=new PriorityQueue<ListNode>(OrderIsdn);
        ListNode first=new ListNode(-1);
        for(int i=0;i<lists.length;i++){
            while(lists[i]!=null){
                queue.add(lists[i]);
                lists[i]=lists[i].next;
            }
        }
        ListNode node=first,temp;
        while((temp=queue.poll())!=null){
            node.next=temp;
            node=node.next;
        }
        node.next=null;
        return first.next;
    }
}