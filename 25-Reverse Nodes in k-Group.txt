/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head==null||head.next==null||k==1)
			return head;
        ListNode first=new ListNode(-1);
        first.next=head;
        ListNode last=first;
        for(int i=0;i<k;i++)
        	if(last.next!=null)
        		last=last.next;
        	else 
        		return head;
        ListNode tempfirst=first,templast=last;
        ListNode n1,n2,n3,temp;
        
        Boolean flag=true;
        
        while(flag){
        	n1=tempfirst.next;
        	n2=n1.next;
        	n1.next=templast.next;
        	temp=n1;
        	while(flag){
        		if(n2==templast){
        			n2.next=n1;
        			tempfirst.next=n2;
        			break;
        		}
        		n3=n2.next;
        		n2.next=n1;
        		n1=n2;
        		n2=n3;
        		if(n3==templast){
        			n3=n3.next;
        			n2.next=n1;
        			tempfirst.next=n2;
        			break;
        		}
        	}
        	tempfirst=temp;
        	templast=tempfirst;
        	for(int i=0;i<k&&flag;i++){
	            templast=templast.next;
	            if(templast==null)
	            	flag=false;
			}
        }
        return first.next;
    }
}