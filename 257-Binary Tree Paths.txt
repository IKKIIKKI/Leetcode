/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String>list = new ArrayList<>();
		StringBuffer sb = new StringBuffer();
		if(root == null)
			return list;
		function(list, root, sb);
		return list;
    }
    public void function(List<String>list, TreeNode root, StringBuffer sb){
		if(root.left == null&&root.right==null){
			sb.append(root.val);
			list.add(sb.toString());
			return;
		}
		sb.append(root.val);
		sb.append("->");
		int length = sb.length();
		if(root.left != null)
			function(list, root.left, sb);
		sb.setLength(length);
		if(root.right != null)
			function(list, root.right, sb);
	}
}